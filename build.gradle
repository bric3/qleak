plugins {
    id "io.spring.dependency-management" version "1.0.8.RELEASE"
    id "org.jetbrains.kotlin.jvm" version "1.3.41"
    id "org.jetbrains.kotlin.kapt" version "1.3.41"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.41"
    id "com.github.johnrengelman.shadow" version "4.0.2"
    id "application"
    id "com.github.ben-manes.versions" version "0.22.0"
}


version "0.1"
group "qleak"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

dependencyManagement {
    imports {
        // https://search.maven.org/artifact/io.micronaut/micronaut-bom/1.2.0/pom
        mavenBom('io.micronaut:micronaut-bom:1.2.0') {
            bomProperties([
                    'junit5.version': junitVersion,
                    'picocli.version': picocliVersion
            ])
        }
    }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

dependencies {
    compile "io.micronaut:micronaut-runtime"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    compile "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    compile "info.picocli:picocli"
    compile "io.micronaut.configuration:micronaut-picocli"
    compile "org.fusesource.jansi:jansi:1.18"

    compile "com.squareup.leakcanary:shark:${sharkVersion}"
    compile "com.squareup.leakcanary:shark-hprof:${sharkVersion}"
    compile "com.squareup.leakcanary:shark-graph:${sharkVersion}"
    compile "com.squareup.leakcanary:shark-log:${sharkVersion}"
    compile "com.squareup.leakcanary:shark-cli:${sharkVersion}"

    kapt "io.micronaut:micronaut-inject-java"
    kapt "io.micronaut:micronaut-validation"
    kaptTest "io.micronaut:micronaut-inject-java"

    runtime "com.fasterxml.jackson.module:jackson-module-kotlin"
    runtime "ch.qos.logback:logback-classic:1.2.3"

    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testCompile "org.assertj:assertj-core:${assertjVersion}"
    testCompile "org.junit.jupiter:junit-jupiter-api"
    testCompile "org.jetbrains.spek:spek-api:${spekVersion}"
    testCompile "io.micronaut.test:micronaut-test-junit5"
    testCompile "io.micronaut:micronaut-inject-java"
    testRuntime "org.junit.jupiter:junit-jupiter-engine"
    testRuntime "org.jetbrains.spek:spek-junit-platform-engine:${spekVersion}"
}

test.classpath += configurations.developmentOnly
mainClassName = "qleak.QLeakCommand"

jar {
    manifest {
        attributes(
                'Main-Class': mainClassName,
                'Implementation-Title': rootProject.name,
                'Implementation-Version': rootProject.version
        )
    }
}

test {
    useJUnitPlatform()
}

allOpen {
    annotation("io.micronaut.aop.Around")
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        //Will retain parameter names for Java reflection
        javaParameters = true
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        javaParameters = true
    }
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')

distTar.enabled = false
distZip.enabled = false
shadowDistTar.enabled = false
shadowDistZip.enabled = false
